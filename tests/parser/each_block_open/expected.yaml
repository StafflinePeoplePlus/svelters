nodes:
  - type: Mustache
    mustacheOpen:
      type: MustacheOpenToken
      span: { start: 0, end: 1, ctxt: 0 }
    leadingWhitespace: null
    mustacheItem:
      type: EachBlockOpen
      eachOpen:
        type: EachOpenToken
        span: { start: 1, end: 6, ctxt: 0 }
      whitespace:
        type: WhitespaceToken
        span: { start: 6, end: 7, ctxt: 0 }
      ecmaExpression:
        type: EcmaExpression
        expression:
          type: Identifier
          span: { start: 7, end: 12, ctxt: 0 }
          value: items
        span: { start: 7, end: 12, ctxt: 0 }
      as:
        type: EachAs
        leadingWs:
          type: WhitespaceToken
          span: { start: 12, end: 13, ctxt: 0 }
        as:
          type: AsToken
          span: { start: 13, end: 15, ctxt: 0 }
        trailingWs:
          type: WhitespaceToken
          span: { start: 15, end: 16, ctxt: 0 }
        span: { start: 12, end: 16, ctxt: 0 }
      context:
        type: Identifier
        span: { start: 16, end: 20, ctxt: 0 }
        value: item
      span: { start: 1, end: 20, ctxt: 0 }
    trailingWhitespace: null
    mustacheClose:
      type: MustacheCloseToken
      span: { start: 20, end: 21, ctxt: 0 }
    span: { start: 0, end: 21, ctxt: 0 }
errors: []
